# -*- coding: utf-8 -*-
"""TalkingAvatar-Lip.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xTsGW7vKHwrVSeSZhY8GEPrGAmCyrvzL
"""

!pip install moviepy

"""EXTRACT AUDIO from VIDEO"""

import moviepy.editor as mpe
video = mpe.VideoFileClip(r"source.mp4")
video.audio.write_audiofile(r"extracted_sound.wav")

!pip install TTS

"""***GENERATE CUSTOM AUDIO FROM CUSTOM CONTENT***

"""

import torch
from TTS.api import TTS

# Get device
device = "cuda" if torch.cuda.is_available() else "cpu"

# List available üê∏TTS models
print(TTS().list_models())

# Init TTS
tts = TTS("tts_models/multilingual/multi-dataset/xtts_v2").to(device)

# Run TTS
# ‚ùó Since this model is multi-lingual voice cloning model, we must set the target speaker_wav and language
# Text to speech list of amplitude values as output
wav = tts.tts(text="Hello world! This is my first product. and This is not my voice , I am not real.", speaker_wav="extracted_audio.wav", language="en")
# Text to speech to a file
tts.tts_to_file(text="Hello world! This is my first product. and This is not my voice , I am not real.", speaker_wav="extracted_sound.wav", language="en", file_path="output.wav")

# !pip install transformers

# from transformers import HFModelHub, HfApi

# # Authenticate with your Hugging Face credentials
# api = HfApi()
# api.login(username="Priyam950124", password="WJDtnfla&!(124")

# from transformers import AutoModelForSequenceClassification, AutoTokenizer

# # Load model and tokenizer
# model = AutoModelForSequenceClassification.from_pretrained("Inferencer/LipSick")
# tokenizer = AutoTokenizer.from_pretrained("Inferencer/LipSick")

"""**CLONE MY GIT REPO BY GIT.**"""

# Commented out IPython magic to ensure Python compatibility.
# !git clone https://github.com/PriyamJha0124/FmonLipSync.git
# %cd FmonLipSync/

"""***RUN TALKING AVATAR FUNCTION***"""

# !ls
# !pip install gradio
!chmod +x run_lipsick.sh
!./run_lipsick.sh

!pip install pyngrok

from pyngrok import ngrok
ngrok.set_auth_token("2hTB8OlGvwx6SFi9mmiyh2Ue4F5_566TvgDpwTPANDsgmVSH9")
import os
import asyncio

# get_ipython().system_raw('./ngrok http 8080 &')
public_url = ngrok.connect(8080).public_url

print(f"ngrok URL: {public_url}")